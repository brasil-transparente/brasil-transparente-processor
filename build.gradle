import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.brasil.transparente.processor'

def getVersionName = {
    def formatter = new SimpleDateFormat("yyyy.MM.dd-HHmm")
    formatter.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"))
    def datePart = formatter.format(new Date())
    return "${datePart}"
}

version = getVersionName()
println "üõ†Ô∏è Building version: ${project.version}"

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.16'

    // MySQL Connector
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.3.2'

    // Lombok for boilerplate code reduction
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

application {
    mainClass = 'com.brasil.transparente.BrasilTransparenteProcessorApplication'
}

jar {
    manifest {
        attributes 'Main-Class': 'com.brasil.transparente.BrasilTransparenteProcessorApplication'
jar
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}
